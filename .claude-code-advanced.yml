# Claude Code 高级自动化配置
# 用于最大化工作效率，减少手动确认

# === 核心自动化设置 ===
auto_approve: true
auto_execute: true
batch_operations: true
silent_mode: false

# === 确认策略 ===
confirm_destructive: false      # 尝试禁用破坏性操作确认
confirm_git_operations: false   # 禁用Git操作确认
confirm_file_operations: false  # 禁用文件操作确认
confirm_network_operations: false # 禁用网络操作确认

# === 性能优化 ===
max_file_size: "1MB"
max_files_per_operation: 100
parallel_operations: true
cache_results: true

# === 智能体配置 ===
agent_settings:
  auto_task_management: true
  proactive_suggestions: true
  context_awareness: true
  learning_mode: true

# === 工作流自动化 ===
workflows:
  development:
    - auto_format: true
    - auto_lint: true
    - auto_test: false  # 测试需要环境支持
    - auto_commit: false # Git提交保持手动
  
  deployment:
    - auto_build: true
    - auto_validate: true
    - health_check: true

# === 安全边界 ===
security:
  allow_all_file_modifications: true
  allow_network_operations: true
  allow_system_commands: true
  protect_sensitive_files:
    - ".env"
    - "*.key"
    - "*.pem"
    - "passwords.txt"
  
  # 永远需要确认的操作
  always_confirm:
    - "rm -rf /"
    - "DROP DATABASE"
    - "DELETE FROM users"
    - "git push --force"

# === 项目特定设置 ===
project_type: "fastapi_enterprise"
frameworks:
  - fastapi
  - sqlalchemy
  - pydantic
  - redis
  - postgresql

# === 智能建议 ===
smart_suggestions:
  code_completion: true
  best_practices: true
  performance_hints: true
  security_warnings: true

# === 日志和监控 ===
logging:
  level: "INFO"
  track_operations: true
  performance_metrics: true
  
# === 快捷命令 ===
shortcuts:
  start: "docker-compose up -d"
  stop: "docker-compose down"
  logs: "docker-compose logs -f"
  test: "pytest backend/tests/"
  format: "black backend/ && isort backend/"
  lint: "flake8 backend/ && mypy backend/"